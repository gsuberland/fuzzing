3319-example-tmp.sqsh
==15626== Memcheck, a memory error detector
==15626== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==15626== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==15626== Command: ./sasquatch -f input/3319-example-tmp.sqsh
==15626== 
SquashFS version [4.0] / inode count [17] suggests a SquashFS image of the same endianess
Trying to decompress using default gzip decompressor...
Trying to decompress with lzma...
==15626== Conditional jump or move depends on uninitialised value(s)
==15626==    at 0x410478: lzma_standard_uncompress (lzma_wrapper.c:101)
==15626==    by 0x40F6D0: compressor_uncompress (compressor.c:206)
==15626==    by 0x40877E: read_block (unsquashfs.c:706)
==15626==    by 0x40F2C7: read_uids_guids_4 (unsquash-4.c:385)
==15626==    by 0x402CE7: main (unsquashfs.c:2953)
==15626== 
Trying to decompress with lzma-adaptive...
==15626== Invalid read of size 1
==15626==    at 0x4C2F95E: memcpy@@GLIBC_2.14 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==15626==    by 0x41B323: CInMemoryStream::Read(void*, unsigned int, unsigned int*) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x434B95: CInBuffer::ReadBlock2() (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41E1D1: NCompress::NLZMA::CDecoder::CodeSpec(unsigned int) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41E4C6: NCompress::NLZMA::CDecoder::CodeReal(ISequentialInStream*, ISequentialOutStream*, unsigned long long const*, unsigned long long const*, ICompressProgressInfo*) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41B6B9: NCompress::NLZMA::CDecoder::Code(ISequentialInStream*, ISequentialOutStream*, unsigned long long const*, unsigned long long const*, ICompressProgressInfo*) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41AFD4: lzmaspec_uncompress (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x4107E9: lzma_adaptive_uncompress (lzma_wrapper.c:298)
==15626==    by 0x40F6D0: compressor_uncompress (compressor.c:206)
==15626==    by 0x40877E: read_block (unsquashfs.c:706)
==15626==    by 0x40F2C7: read_uids_guids_4 (unsquash-4.c:385)
==15626==    by 0x402CE7: main (unsquashfs.c:2953)
==15626==  Address 0xfff001000 is not stack'd, malloc'd or (recently) free'd
==15626== 
==15626== 
==15626== Process terminating with default action of signal 11 (SIGSEGV)
==15626==  Access not within mapped region at address 0xFFF001000
==15626==    at 0x4C2F95E: memcpy@@GLIBC_2.14 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==15626==    by 0x41B323: CInMemoryStream::Read(void*, unsigned int, unsigned int*) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x434B95: CInBuffer::ReadBlock2() (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41E1D1: NCompress::NLZMA::CDecoder::CodeSpec(unsigned int) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41E4C6: NCompress::NLZMA::CDecoder::CodeReal(ISequentialInStream*, ISequentialOutStream*, unsigned long long const*, unsigned long long const*, ICompressProgressInfo*) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41B6B9: NCompress::NLZMA::CDecoder::Code(ISequentialInStream*, ISequentialOutStream*, unsigned long long const*, unsigned long long const*, ICompressProgressInfo*) (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x41AFD4: lzmaspec_uncompress (in /home/graham/squash-fuzz/sasquatch)
==15626==    by 0x4107E9: lzma_adaptive_uncompress (lzma_wrapper.c:298)
==15626==    by 0x40F6D0: compressor_uncompress (compressor.c:206)
==15626==    by 0x40877E: read_block (unsquashfs.c:706)
==15626==    by 0x40F2C7: read_uids_guids_4 (unsquash-4.c:385)
==15626==    by 0x402CE7: main (unsquashfs.c:2953)
==15626==  If you believe this happened as a result of a stack
==15626==  overflow in your program's main thread (unlikely but
==15626==  possible), you can try to increase the size of the
==15626==  main thread stack using the --main-stacksize= flag.
==15626==  The main thread stack size used in this run was 8388608.
Parallel unsquashfs: Using 1 processor
==15626== 
==15626== HEAP SUMMARY:
==15626==     in use at exit: 10,973,984 bytes in 28 blocks
==15626==   total heap usage: 6,779 allocs, 6,751 frees, 10,769,310,776 bytes allocated
==15626== 
==15626== LEAK SUMMARY:
==15626==    definitely lost: 0 bytes in 0 blocks
==15626==    indirectly lost: 0 bytes in 0 blocks
==15626==      possibly lost: 1,440 bytes in 5 blocks
==15626==    still reachable: 10,972,544 bytes in 23 blocks
==15626==         suppressed: 0 bytes in 0 blocks
==15626== Rerun with --leak-check=full to see details of leaked memory
==15626== 
==15626== For counts of detected and suppressed errors, rerun with: -v
==15626== Use --track-origins=yes to see where uninitialised values come from
==15626== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
